{"version":3,"sources":["js/mock2.js","Dropdown/Dropdown.js","Sessions/Sessions.js","LoginContainer/LoginContainer.js","App.js","index.js"],"names":["window","lightdm","is_authenticated","hostname","can_hibernate","can_suspend","can_restart","can_shutdown","suspend","alert","hibernate","restart","shutdown","languages","code","name","territory","authenticate","cancel_authentication","respond","sessions","key","comment","default_session","users","real_name","display_name","language","layout","session","logged_in","Dropdown","props","state","this","setState","items","selected","open","event","item","target","innerText","id","value","handleChange","headerStyle","classNames","className","onClick","toggleList","bind","map","select","Component","Sessions","e","menuI","fontSize","color","wait","fun","time","timeout","a","ms","Promise","resolve","setTimeout","args","LoginContainer","user","handleKeyPress","document","getElementById","focus","preventDefault","password","validateStatus","warningText","startDefaultSession","loginScreen","cancelAuthentication","submit","keyCode","isInAuth","count","start_session_sync","focusLoginScreen","buttonStyles","passwordStyles","onKeyDown","ref","onSubmit","htmlFor","handleChangeUser","type","onChange","handleChangePass","handleChangeSession","PowerSettingsNew","style","Replay","App","width","height","updateWindowDimensions","addEventListener","removeEventListener","outerWidth","outerHeight","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d1f72150.chunk.js","sourcesContent":["if (typeof window.lightdm === 'undefined') {\n  window.lightdm = {};\n\n  let lightdm = window.lightdm;\n  lightdm.is_authenticated = false;\n  lightdm.hostname = 'hostname';\n  lightdm.can_hibernate = true;\n  lightdm.can_suspend = true;\n  lightdm.can_restart = true;\n  lightdm.can_shutdown = true;\n  lightdm.suspend = function() {\n    alert('System Suspended. Bye Bye');\n  };\n\n  lightdm.hibernate = function() {\n    alert('System Hibernated. Bye Bye');\n  };\n\n  lightdm.restart = function() {\n    alert('System restart. Bye Bye');\n  };\n\n  lightdm.shutdown = function() {\n    alert('System Shutdown. Bye Bye');\n  };\n\n  lightdm.languages = [\n    { code: 'en_US', name: 'English(US)', territory: 'USA' },\n    { code: 'en_UK', name: 'English(UK)', territory: 'UK' }\n  ];\n  lightdm.authenticate = () => {};\n  lightdm.cancel_authentication = () => {};\n  lightdm.respond = () => {};\n  lightdm.sessions = [\n    {\n      name: 'Xmonad',\n      key: 'xmonad',\n      comment: null,\n    },\n    {\n      name: 'i3-gaps',\n      key: 'i3',\n      comment: null,\n    }\n  ];\n  lightdm.default_session = 'Xmonad';\n  lightdm.users = [\n    {\n      name: 'vinicius',\n      real_name: 'Vinicius',\n      display_name: 'Vinicius Gon√ßalves',\n      language: 'en_US',\n      layout: null,\n      session: 'xmonad',\n      logged_in: false\n    },\n    {\n      name: 'pedro',\n      real_name: 'Pedro',\n      display_name: 'Pedro Henrique',\n      language: 'en_US',\n      layout: null,\n      session: 'i3',\n      logged_in: false\n    }\n  ];\n}\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport './Dropdown.css';\n\nclass Dropdown extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            'items': [],\n            'selected': '',\n            'open': false\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ items: this.props.items, selected: this.props.items[0] });\n    }\n\n    toggleList() {\n        this.setState({ open: !this.state.open });\n    }\n\n    select(event) {\n        for (let item in this.state.items) {\n            if (this.state.items[item].real_name === event.target.innerText) {\n                this.setState({ selected: this.state.items[item] });\n                break;\n            }\n        }\n    }\n\n    render() {\n\n        const { id, value, items, handleChange } = this.props;\n\n        const headerStyle = classNames({\n            'menuHeader': true,\n            'menuHeaderActive': this.state.open\n        });\n\n        return (\n            <div\n                className=\"menuContainer\"\n                id={id}\n                value={value}\n            >\n                <div\n                    className={headerStyle}\n                    onClick={this.toggleList.bind(this)}\n                >\n                    {this.state.selected.real_name}\n                </div>\n                {this.state.open && (\n                    <div\n                        className=\"listContainer\"\n                    >\n                        {items && items.map(item => (\n                            <div\n                                className=\"listItem\"\n                                key={item.name}\n                                onClick={event => {\n                                    this.toggleList();\n                                    this.select(event);\n                                    handleChange(event);\n                                }}\n                            >\n                                {item.real_name}\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default Dropdown;\n","import React, { Component } from 'react';\nimport './Sessions.css'\n\nclass Sessions extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            'open': false,\n            'sessions': [],\n            'selected': '',\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ sessions: this.props.sessions, selected: this.props.sessions[0] });\n    }\n\n    select(event) {\n        for (let session in this.state.sessions) {\n            if (this.state.sessions[session].name === event.target.innerText) {\n                this.setState({ selected: this.state.sessions[session] });\n                break;\n            }\n        }\n    }\n\n    toggleList() {\n        this.setState({ open: !this.state.open });\n    }\n\n    render() {\n        const { id, value, sessions, handleChange } = this.props;\n        return (\n            <div\n                className=\"sessionsContainer\"\n                id={id}\n                value={value}\n            >\n                <div\n                    className=\"sessionsHeader\"\n                    onClick={this.toggleList.bind(this)}\n                >\n                    {this.state.selected.name}\n                </div>\n                {this.state.open && (\n                    <div className=\"sessionsListContainer\">\n                        {sessions && sessions.map(session => (\n                            <div\n                                className=\"sessionsListItem\"\n                                key={session.name}\n                                onClick={(e) => {\n                                    this.toggleList();\n                                    this.select(e);\n                                    handleChange(e);\n                                }}\n                            >\n                                {session.name}\n                            </div>\n                        ))}\n                    </div>\n                )}\n\n            </div>\n        );\n    }\n}\n\nexport default Sessions;\n","import React, { Component } from 'react';\nimport { PowerSettingsNew, Replay } from '@material-ui/icons';\nimport Dropdown from '../Dropdown/Dropdown';\nimport Sessions from \"../Sessions/Sessions\";\nimport './LoginContainer.css';\nimport classNames from 'classnames';\n\nconst menuI = {\n    fontSize: \"3.5vmin\",\n    color: \"#cccccc\"\n}\n\nasync function wait(fun, time, ...args) {\n    function timeout(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n    await timeout(time);\n    return fun(...args);\n}\n\nclass LoginContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            'users': window.lightdm.users,\n            'user': window.lightdm.users[0],\n            'password': '',\n            'sessions': window.lightdm.sessions,\n            'session': '',\n            'isInAuth': false,\n            'validateStatus': '',\n            'warningText': '',\n        };\n\n        window.lightdm.authenticate(this.state.user.name);\n\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n    }\n    \n    componentDidMount() {\n        document.getElementById('pass').focus();\n    }\n\n    submit(e) {\n        e.preventDefault();\n        let password = this.state.password;\n        if (password) {\n            this.setState({\n                validateStatus: '',\n                warningText: ''\n            });\n            window.lightdm.respond(password);\n            this.startDefaultSession();\n        } else {\n            this.setState({\n                validateStatus: 'warning',\n                warningText: 'No password.'\n            });\n        }\n    }\n\n    focusLoginScreen() {\n        if (this.loginScreen) {\n            this.loginScreen.focus();\n        }\n    }\n\n    handleChangeUser(event) {\n        for (let user in this.state.users) {\n            if (this.state.users[user].real_name === event.target.innerText) {\n                this.setState({ user: this.state.users[user] });\n                this.cancelAuthentication();\n                break;\n            }\n        }\n    }\n\n    handleChangePass(event) {\n        if (event.key === 'Enter') {\n            this.submit();\n        }\n        this.setState({\n            password: event.target.value,\n            validateStatus: '',\n            warningText: ''\n        });\n    }\n\n    handleChangeSession(event) {\n        for (let session in this.state.sessions) {\n            if (this.state.sessions[session].name === event.target.innerText) {\n                this.setState({ session: this.state.sessions[session] });\n                break;\n            }\n        }\n    }\n\n    handleKeyPress(event) {\n        if (event.keyCode === 27) {\n            this.cancelAuthentication();\n        }\n    }\n\n    cancelAuthentication() {\n        window.lightdm.cancel_authentication();\n        this.setState({ password: '' });\n        this.setState({ isInAuth: false });\n        window.lightdm.authenticate(this.state.user.name);\n    }\n\n    startDefaultSession(count = 0) {\n        if (window.lightdm.is_authenticated) {\n            window.lightdm.start_session_sync(this.state.session.key || '');\n        } else if (count === 0 || (count < 5 && this.state.isInAuth)) {\n            this.setState({ isInAuth: true });\n            this.focusLoginScreen();\n            wait(this.startDefaultSession.bind(this), 2 ** count * 1000, count + 1);\n        } else {\n            this.cancelAuthentication();\n            this.setState({\n                validateStatus: 'warning',\n                warningText: 'Login Failed.'\n            });\n            document.getElementById('pass').focus();\n        }\n    }\n\n    render() {\n        const buttonStyles = classNames({\n            'loginBtn': true,\n            'loading': this.state.isInAuth\n        });\n        const passwordStyles = classNames({\n            'password': true,\n            'error': this.state.validateStatus\n        });\n        return (\n            <div\n                onKeyDown={this.handleKeyPress}\n                className=\"container\"\n                ref={loginScreen => {\n                    this.loginScreen = loginScreen;\n                }}\n            >\n                <div className=\"loginForm\">\n                    <header className=\"header\">\n                        <h1>LOGIN</h1>\n                    </header>\n                    <form onSubmit={this.submit.bind(this)}>\n                        <label htmlFor=\"user\">USER</label>\n                        <Dropdown\n                            items={this.state.users}\n                            id=\"user\"\n                            handleChange={this.handleChangeUser.bind(this)}\n                            value={this.state.user}\n                        />\n                        <label htmlFor=\"pass\">PASSWORD</label>\n                        <input\n                            id=\"pass\"\n                            type=\"password\"\n                            className={passwordStyles}\n                            onChange={this.handleChangePass.bind(this)}\n                            value={this.state.password}\n                        />\n                        <button\n                            className={buttonStyles}\n                        >\n                            {this.state.isInAuth ? (\n                                <div className=\"loader\"></div>\n                            ) : (\n                                    <span>SIGN IN</span>\n                                )\n                            }\n                        </button>\n                        <div className=\"session\">\n                            <Sessions\n                                id=\"session\"\n                                sessions={this.state.sessions}\n                                value={this.state.session}\n                                handleChange={this.handleChangeSession.bind(this)}\n                            />\n                        </div>\n                    </form>\n                </div>\n                <div className=\"banner\">\n                    <div className=\"menu\">\n                        <button\n                            className=\"mItem\"\n                            onClick={() => window.lightdm.shutdown()}\n                        >\n                            <PowerSettingsNew style={menuI} />\n                        </button>\n                        <button\n                            className=\"mItem\"\n                            onClick={() => window.lightdm.restart()}\n                        >\n                            <Replay style={menuI} />\n                        </button>\n                    </div>\n                    <span className=\"nihongo\">„ÅäÂ∏∞„Çä„Å™„Åï„ÅÑ</span>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default LoginContainer;","import React, { Component } from 'react';\nimport './App.css';\nimport mock from './js/mock2';\nimport LoginContainer from './LoginContainer/LoginContainer';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0,\n    };\n\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: window.outerWidth, height: window.outerHeight });\n  }\n\n  render() {\n    return (\n      <LoginContainer />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}